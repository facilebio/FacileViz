% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/facet.R
\name{unify_legend}
\alias{unify_legend}
\title{Hacks into plotly internals merge legends across subplots.}
\usage{
unify_legend(x, type = c("scatter", "box", "box+points"), ...)
}
\arguments{
\item{x}{plotly object}
}
\value{
A mangled \code{x}
}
\description{
This is important when the subplot that has \code{showlegend = TRUE} doesn't have
all the data points to cover the entirety of the data/legend key.
}
\details{
This is SUUUUUUUUPER brittle. Also note that your \code{plot_ly} calls need to
use \code{legendgroup} correctly.
}
\examples{
library(plotly)
dat <- data.frame(
  x = 1:6,
  y = 1:6,
  a = c("a", "a", "b", "c", "b", "d"),
  b = c("x", "y", "y", "y", "z", "z"))
colors <- c(a = "blue", b = "red", c = "green", d = "orange")
plots <- sapply(unique(dat$b), function(val) {
  xdat <- subset(dat, b == val)
  # You need go guess the appropriate subplot to set `showlegend = TRUE`,
  # but there are none that have all values of `a`.
  plot_ly(xdat, x = ~x, y = ~y, legendgroup = ~a, showlegend = val == "y") \%>\%
    add_markers(type = "scatter", color = ~a, colors = colors)
}, simplify = FALSE)

# compare

(sb <- subplot(plots))
unify_legend(sb)
}
